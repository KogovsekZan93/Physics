function avg_std_f = FindOutputVariableAvgStd...
    (InputVariablesDistributionInfo, handle_F, N_Rnd)
%% Tool for finding the average value and the standard 
%% deviation of the output variable
% 
% Author: Žan Kogovšek
% Date: 9.14.2024
% Last changed: 9.14.2024
% 
%% Description
% 
% Given the input cell array "InputVariablesDistributionInfo", 
% which contains information about the distribution of the input 
% variables of the f function, the input function handle "handle_F" 
% of the F function, which contain the f function, and the input 
% integer "N_Rnd", this function returns the matrix "avg_ std _f" 
% where the "avg_std_f"(j, 1) value is the average of the j-th 
% value of the f function and the "avg_std_f"(j, 2) value is the 
% standard deviation of the j-th function value. 
% The distribution of the 
% The values of the "avg_std_f" matrix are based on "N_Rnd" 
% valid outputs of the f function, where the input values are 
% randomly generated based on the distribution of the input 
% variables. 
% 
%% Variables
% 
% This function has the form of avg_std_f = ...
% FindOutputVariableAvgStd...
% (InputVariablesDistributionInfo, handle_F, N_Rnd)
% 
% "InputVariablesDistributionInfo" is a horizontal cell array. Each 
% "InputVariablesDistributionInfo"{i} cell contains the information 
% about the distribution of the j-th input variable or the f function. 
% Each cell of the "InputVariablesDistributionInfo" cell array can 
% only be of one of the following five forms: 
%    1."InputVariablesDistributionInfo"{i} is a vector of numbers 
%            In this case, the j-th input variable of the f function is a 
%            number. The values of the j-th input variable will be 
%            generated by random selection of one of the numbers 
%            of the vector. 
%    2.	"InputVariablesDistributionInfo"{i} has the form {"V", "R"}, 
%         where V is a vertical vector and R a matrix of numbers. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be the 
%            randomly generated vectors with the mean "V" and the 
%            covariance matrix "R" of the values of the vector. 
%    3.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "S"}, 1}, where "V" is a vertical vector and "S" is a 
%         nonnegative real number.  
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly and uniformly generated from 
%            the interval ["V"(k) - "S", "V"(k) + "S"]. 
%    4.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "STD"}, 2}, where "V" is a vertical vector and "STD" 
%         is a nonnegative real number. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly generated from the normal 
%            distribution with the mean V(k) and the standard 
%            deviation "STD". 
%    5.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "S_STD"}, 3}, where "V" is a vertical vector and 
%         "S_STD" is a nonnegative real number. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly and uniformly generated such 
%            that the mean value is "V"(k) and the standard deviation 
%            is "S_STD" (the interval thus being ["V"(k) - "S_STD" * 
%            sqrt(12) / 2, "V"(k) + "S_STD" * sqrt(12) / 2]). 
% 
% "handle_F" is the function handle of the F function. The input 
% variables of the F function are the same as that of the f 
% function. The input variables must have the form of a single 
% vertical vector (i.e. the vectors of each previously discussed 
% variable i being combined into a single vector). 
% The output variables of the f function must be in the form of a 
% single vertical vector vec_f of some length length_f. 
% The output of the F function must also be a single vertical 
% vector vec_F which consists of three parts: 
%    1.	The first part (vec_F(1 : length_f)) is the output vector 
%         vec_f of the f function. 
%    2.	For the second part (vec_F(length_f + 1 : 2 * length_f)), 
%         the value of each variable vec_F(m + length_f) is the 
%         index of the figure on which the distribution of the 
%         vec_f(m) value is to be plotted 
%         (if vec_F(m + length_f) == 0, the distribution of the 
%         vec_f(m) value will not be plotted). 
%    3.	Finally, the value of the last variable of the vec_F vector 
%         (vec_F(2 * length_f + 1)) must be either "0" if the values 
%         of the vec_f vector are invalid or "1" if the values of the 
%         vec_f vector are valid. The values of the vec_f vector will 
%         only used in the calculation of the mean and the standard 
%         deviation of the output variables of the f function is they 
%         are valid. If not, a new vector is randomly generated in 
%         place of the invalid one. 
% 
% "N_Rnd" is the number of valid output vectors vec_f of the f 
% function to be randomly generated and used to calculate the 
% average and the standard deviation of each variable of the 
% output vector of the f function. It must be a natural number. 
% 
% "avg_std_f"


[OutputVariablesMatrix, figureVector] = ...
    GetOutputVariablesMatrix...
    (InputVariablesDistributionInfo, handle_F, N_Rnd);

avg_std_f = ...
    [(mean(OutputVariablesMatrix))', (std(OutputVariablesMatrix))'];

avg_f = avg_std_f(:, 1);
std_f = avg_std_f(:, 2);
DrawOutputVariableDistribution...
    (OutputVariablesMatrix, figureVector, avg_f, std_f);

end