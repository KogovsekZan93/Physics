function DrawOutputVariableDistribution...
    (OutputVariablesMatrix, figureVector, avg_f, std_f)
%% Tool for plotting the distribution of the selected 
%% function output variables
% 
% Author: Žan Kogovšek
% Date: 9.17.2024
% Last changed: 9.17.2024
% 
%% Description
% 
% Given the matrix "OutputVariablesMatrix" of column vectors of 
% valid outputs of the f function, the "figureVector" vector of 
% integers, the vector "avg_f" of average values of the output 
% variables of the f function, and the vector "std_f" of the 
% standard deviations of the output variables of the f function, 
% this function plots the distribution of all j-th output variables of 
% the f function for which "figureVector"(j) is a natural number 
% and thus the index of the figure on which the distribution is to 
% be plotted. Additionally, on each figure with the index 
% "figureVector"(j) != 0, a normal distribution curve which has the 
% same mean (ie. "avg_f"(j)) and standard deviation (ie. 
% "std_f"(j)) as the distribution of the j-th output variable of the f 
% function is plotted.
% 
%% Variables
% 
% This function has the form of DrawOutputVariableDistribution...
% (OutputVariablesMatrix, figureVector, avg_f, std_f)
% 




% "InputVariablesDistributionInfo" is a horizontal cell array. Each 
% "InputVariablesDistributionInfo"{i} cell contains the information 
% about the distribution of the i-th input variable or the f function. 
% Each cell of the "InputVariablesDistributionInfo" cell array can 
% only be of one of the following five forms: 
%    1."InputVariablesDistributionInfo"{i} is a vector of numbers. 
%            In this case, the i-th input variable of the f function is a 
%            number. The values of the i-th input variable will be 
%            generated by random selection of one of the numbers 
%            of the vector "InputVariablesDistributionInfo"{i}. 
%    2.	"InputVariablesDistributionInfo"{i} has the form {"V", "R"}, 
%         where "V" is a column vector and "R" a matrix of 
%         numbers. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be the 
%            randomly generated vectors with the mean "V" and the 
%            covariance matrix "R" of the variables of the vector. 
%    3.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "S"}, 1}, where "V" is a column vector and "S" is a 
%         nonnegative real number.  
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly and uniformly generated from 
%            the interval ["V"(k) - "S", "V"(k) + "S"]. 
%    4.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "STD"}, 2}, where "V" is a column vector and "STD" 
%         is a nonnegative real number. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly generated from the normal 
%            distribution with the mean V(k) and the standard 
%            deviation "STD". 
%    5.	"InputVariablesDistributionInfo"{i} has the form 
%         {{"V", "S_STD"}, 3}, where "V" is a column vector and 
%         "S_STD" is a nonnegative real number. 
%            In this case, the i-th input variable of the f function is a 
%            vector. The values of the i-th input variable will be 
%            vectors v, the values v(k) of each vector v being 
%            independently randomly and uniformly generated such 
%            that the mean value is "V"(k) and the standard deviation 
%            is "S_STD" (the interval thus being ["V"(k) - "S_STD" * 
%            sqrt(12) / 2, "V"(k) + "S_STD" * sqrt(12) / 2]). 
% 
% "handle_F" is the function handle of the F function. The input 
% variables of the F function are the same as that of the f 
% function. The input variables must have the form of a single 
% column vector (i.e. the vectors of each previously discussed 
% variable i being combined into a single column vector). 
% The output variables of the f function must be in the form of a 
% single column vector vec_f of some length length_f. 
% The output of the F function must also be a single column 
% vector vec_F which consists of three parts: 
%    1.	The first part (vec_F(1 : length_f)) is the output vector 
%         vec_f of the f function. 
%    2.	For the second part (vec_F(length_f + 1 : 2 * length_f)), 
%         the value of each variable vec_F(m + length_f) is the 
%         index of the figure on which the distribution of the 
%         vec_f(m) variable is to be plotted 
%         (if vec_F(m + length_f) == 0, the distribution of the 
%         vec_f(m) variable will not be plotted). 
%    3.	Finally, the value of the last variable of the vec_F vector 
%         (vec_F(2 * length_f + 1)) must be either "0" if the values 
%         of the vec_f vector are invalid or "1" if the values of the 
%         vec_f vector are valid. The values of the vec_f vector will 
%         only used in the calculation of the average and the 
%         standard deviation of the output variables of the f function 
%         is they are valid. If not, a new vector is randomly 
%         generated in place of the invalid one. 
% 
% "N_Rnd" is the number of valid output vectors vec_f of the f 
% function to be randomly generated and used to calculate the 
% average and the standard deviation of each variable of the 
% output vector of the f function. It must be a natural number. 
% 
% "avg_std_f" is a matrix of two columns, where the 
% "avg_std_f"(j, 1) value is the average value of the j-th output 
% variable of the f function and the "avg_std_f"(j, 2) value is the 
% standard deviation of the j-th variable of the f function. The 
% values of the "avg_std_f" matrix are based on "N_Rnd" valid 
% outputs of the f function, the validity of the outputs being 
% based on the value of the final output variable of the F 
% function. The input values for each valid output of the f 
% function are randomly generated based on the distribution of 
% the input variables, specified by the 
% "InputVariablesDistributionInfo" cell array. 


pars = inputParser;

paramName = 'OutputVariablesMatrix';
errorMsg = ...
    '''OutputVariablesMatrix'' must be a matrix of real numbers.';
validationFcn = @(x)assert(isnumeric(x) && ismatrix(x) && ...
    isreal(x), errorMsg);
addRequired(pars, paramName, validationFcn);

paramName = 'figureVector';
errorMsg = ...
    '''figureVector'' must be a column vector of non-negative integers.';
validationFcn = @(x)assert(isnumeric(x) && iscolumn(x) ...
    && (sum(mod(x,1) == 0) == 0  - length(x)) == 0 && ...
    sum(x >= 0) - length(x) == 0, errorMsg);
addRequired(pars, paramName, validationFcn);

paramName = 'avg_f';
errorMsg = ...
    '''avg_f'' must be a column vector of real numbers.';
validationFcn = @(x)assert(isnumeric(x) && iscolumn(x) && ...
    isreal(x), errorMsg);
addRequired(pars, paramName, validationFcn);

paramName = 'sigma_f';
errorMsg = ...
    '''sigma_f'' must be a column vector of real numbers.';
validationFcn = @(x)assert(isnumeric(x) && iscolumn(x) && ...
    isreal(x) == 1, errorMsg);
addRequired(pars, paramName, validationFcn);

parse(pars, OutputVariablesMatrix, figureVector, avg_f, std_f);

length_OutputVariables = length(OutputVariablesMatrix(1, :));

for j = 1 : length_OutputVariables
    if figureVector(j) ~= 0
        figure(figureVector(j));
        clf;
        hold on;
        
        histogram(OutputVariablesMatrix(:, j), 'Normalization', 'pdf');
        
        length_x = power(10,3);
        x = linspace(avg_f(j) - 3 * std_f(j), ...
            avg_f(j) + 3 * std_f(j), length_x);
        plot(x, normpdf(x, avg_f(j), std_f(j)), 'r');
        
        xlim([avg_f(j) - 3 * std_f(j), avg_f(j) + 3 * std_f(j)]);
        grid on;
        hold off;
    end
end

end